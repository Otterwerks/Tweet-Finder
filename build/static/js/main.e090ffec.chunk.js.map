{"version":3,"sources":["navbar.js","home.js","search.js","awesometweets.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","buttonList","navigationButtons","i","length","push","react_default","a","createElement","className","value","onClick","this","props","pageNav","generateNavigationButtons","buttons","Component","Home","classname","Search","type","onChange","searchType","selectSearchType","contentType","selectContentType","searchTweets","formatTweet","tweets","AwesomeTweets","tweet","user","screen_name","getTweet","showDescription","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","view","searchString","searchResults","awesomeTweets","handleChange","bind","assertThisInitialized","setSearchType","setContentType","pageNavigation","formatTweets","event","setState","target","_this2","url","axios","get","then","response","data","statuses","catch","error","console","log","_this3","text","split","map","fragment","includes","href","reduce","words","word","concat","_this4","key","id","created_at","applyLink","search","awesometweets","home","navbar","currentView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e090ffec.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  generateNavigationButtons(buttonList) {\n    let navigationButtons = []\n    for (let i = 0; i < buttonList.length; i++) {\n      navigationButtons.push(<button className=\"navButton\" value={buttonList[i]} onClick={this.props.pageNav}>{buttonList[i]}</button>);\n    }\n    return navigationButtons;\n  }\n\n  render() {\n    return (\n      <div className=\"navBar\">\n            {this.generateNavigationButtons(this.props.buttons)}\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n      return(\n        <div className=\"main\">\n          <div className=\"row\">\n            <div classname=\"col-8\">\n              <div className=\"subHeader\">\n                <h1>Home</h1>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"textBox\">\n                <p>text placeholder</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Search extends Component {\n    render() {\n      return (\n        <div className=\"main\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"subHeader\">\n                <h1>Search Tweets</h1>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"input\">\n                <input type=\"text\" value={this.props.value} onChange={this.props.onChange}/>\n                <select value={this.props.searchType} onChange={this.props.selectSearchType}>\n                  <option value=\"standard\">Standard</option>\n                  <option value=\"user\">Username</option>\n                </select>\n                <select value={this.props.contentType} onChange={this.props.selectContentType}>\n                  <option value=\"mixed\">Standard</option>\n                  <option value=\"popular\">Popular</option>\n                  <option value=\"recent\">Recent</option>\n                </select>\n                <button onClick={this.props.searchTweets}>Find Tweets</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"tweets\">\n                {this.props.formatTweet(this.props.tweets)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default Search;\n","import React, { Component } from 'react';\n\nclass AwesomeTweets extends Component {\n  showDescription() {\n    if (this.props.tweet[0]) {\n      switch (this.props.tweet[0].user.screen_name) {\n        case \"jabrils_\":\n          return \"jabrils\";\n        case \"Raspberry_Pi\":\n          return \"raspberry pi\";\n        case \"MarkKnopfler\":\n          return \"mark knopfler\";\n        case \"mightycarmods\":\n          return \"mighty car mods\";\n        case \"aantonop\":\n          return \"antonopolous\";\n        default:\n          return \"I don't know anything about this account, how did it get here?\";\n      }\n    } else {\n      return \"Press the button to display a random tweet from one of my favorite Twitter accounts.\";\n    }\n  }\n\n    render() {\n      return (\n        <div className=\"main\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"subHeader\">\n                <h1>Tweets From My Favorite Accounts</h1>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"input\">\n                <button onClick={this.props.getTweet}>Listen to the chirping</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <div className=\"textBox\">\n                <p>{this.showDescription()}</p>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"tweets\">\n                {this.props.formatTweet(this.props.tweet)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default AwesomeTweets;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './navbar.js';\nimport Home from './home.js';\nimport Search from './search.js';\nimport AwesomeTweets from './awesometweets.js';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: \"Home\",\n      searchString: 'nasa',\n      searchType: 'content',\n      contentType: 'mixed',\n      searchResults: [],\n      awesomeTweets: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.setSearchType = this.setSearchType.bind(this);\n    this.setContentType = this.setContentType.bind(this);\n    this.searchTweets = this.searchTweets.bind(this);\n    this.pageNavigation = this.pageNavigation.bind(this);\n    this.formatTweets = this.formatTweets.bind(this);\n    this.awesomeTweets = this.awesomeTweets.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({searchString: event.target.value});\n  }\n\n  setSearchType(event) {\n    this.setState({searchType: event.target.value});\n  }\n\n  setContentType(event) {\n    this.setState({contentType: event.target.value});\n  }\n\n  pageNavigation(event) {\n    this.setState({view: event.target.value})\n  }\n\n  searchTweets() {\n    this.setState({searchResults: []});\n    if (this.state.searchString != '') {\n      let resource = 'api/v1/methods/search?';\n      let parameter1 = 'searchString=' + this.state.searchString;\n      let parameter2 = '&searchType=' + this.state.searchType;\n      let parameter3 = '&contentType=' + this.state.contentType;\n      let url = resource + parameter1 + parameter2 + parameter3;\n      axios.get(url)\n        .then((response) => {\n          this.setState({searchResults: response.data.statuses});\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n      this.setState({searchString: ''});\n    }\n  }\n\n  awesomeTweets() {\n    let url = 'api/v1/methods/showcase';\n    axios.get(url)\n      .then((response) => {\n        this.setState({awesomeTweets: [response.data]})\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  applyLink(text) {\n    let fragments = text.split(' ').map(fragment => {\n      if (fragment.includes(\"http://\") || fragment.includes(\"https://\")) {\n        return <a href={fragment}>{fragment}</a>;\n      } else {\n        return fragment;\n      }\n    });\n    return fragments.reduce((words, word) => words.concat(word, ' '), [\"\"]);\n  }\n  \n  formatTweets(tweets) {\n    return (tweets.map(tweet => {\n      return (\n        <div className=\"tweet\" key={tweet.id}>\n          <div className=\"tweetBorder\">\n            <div className=\"tweetHeader\">\n              <h2>By {tweet.user.screen_name}, on {tweet.created_at}</h2>\n            </div>\n            <div className=\"tweetBody\">\n              <p className=\"tweetText\">{this.applyLink(tweet.text)}</p>\n            </div>\n            <div className=\"tweetFooter\">\n              \n            </div>\n          </div>\n        </div>\n      )\n    }))\n  }\n\n  currentView() {\n    if (this.state.view === \"Search\") {\n      return (<Search \n                onChange={this.handleChange}\n                selectSearchType={this.setSearchType}\n                selectContentType={this.setContentType}\n                searchTweets={this.searchTweets}\n                searchType={this.state.searchType}\n                contentType={this.state.contentType}\n                value={this.state.searchString} \n                tweets={this.state.searchResults}\n                formatTweet={this.formatTweets}\n              />)\n    } else if (this.state.view === \"Awesome Tweets\") {\n      return <AwesomeTweets \n                tweet={this.state.awesomeTweets}\n                getTweet={this.awesomeTweets}\n                formatTweet={this.formatTweets}\n              />\n    } else {\n      return <Home />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <div className=\"header\">\n              <h1>Header Text</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-1\">\n            <Navbar pageNav={this.pageNavigation} buttons={[\"Home\", \"Search\", \"Awesome Tweets\"]}/>\n          </div>\n          <div className=\"col-7\">\n            {this.currentView()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}