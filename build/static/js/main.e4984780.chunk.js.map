{"version":3,"sources":["navbar.js","home.js","search.js","awesometweets.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","buttonList","navigationButtons","i","length","push","react_default","a","createElement","className","value","onClick","this","props","pageNav","generateNavigationButtons","buttons","Component","Home","Search","type","onChange","searchType","selectSearchType","contentType","selectContentType","searchTweets","formatTweet","tweets","AwesomeTweets","tweet","user","screen_name","getTweet","showDescription","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","view","searchString","searchResults","awesomeTweets","handleChange","bind","assertThisInitialized","setSearchType","setContentType","pageNavigation","formatTweets","event","setState","target","_this2","url","axios","get","then","response","data","statuses","catch","error","console","log","_this3","text","split","map","fragment","includes","href","reduce","words","word","concat","_this4","key","id","created_at","applyLink","search","awesometweets","home","navbar","currentView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qQAqBeA,2MAjBaC,GAExB,IADA,IAAIC,EAAoB,GACfC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IACrCD,EAAkBG,KAAKC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,MAAOT,EAAWE,GAAIQ,QAASC,KAAKC,MAAMC,SAAUb,EAAWE,KAE3H,OAAOD,mCAIP,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACRG,KAAKG,0BAA0BH,KAAKC,MAAMG,iBAblCC,cCqBNC,mLAnBT,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wCAAb,2DAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6CAAb,mCAbKQ,aCwCJE,mLAtCT,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,oBAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOV,MAAOE,KAAKC,MAAMH,MAAOW,SAAUT,KAAKC,MAAMQ,WACjEf,EAAAC,EAAAC,cAAA,UAAQE,MAAOE,KAAKC,MAAMS,WAAYD,SAAUT,KAAKC,MAAMU,kBACzDjB,EAAAC,EAAAC,cAAA,UAAQE,MAAM,YAAd,YACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,aAEFJ,EAAAC,EAAAC,cAAA,UAAQE,MAAOE,KAAKC,MAAMW,YAAaH,SAAUT,KAAKC,MAAMY,mBAC1DnB,EAAAC,EAAAC,cAAA,UAAQE,MAAM,SAAd,YACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,WAAd,WACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,UAAd,WAEFJ,EAAAC,EAAAC,cAAA,UAAQG,QAASC,KAAKC,MAAMa,cAA5B,kBAINpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZG,KAAKC,MAAMc,YAAYf,KAAKC,MAAMe,mBA/B9BX,aCwDNY,4LAtDX,IAAIjB,KAAKC,MAAMiB,MAAM,GAgBnB,MAAO,uFAfP,OAAQlB,KAAKC,MAAMiB,MAAM,GAAGC,KAAKC,aAC/B,IAAK,WACH,OAAO1B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAAH,uPACT,IAAK,eACH,OAAOF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+BAAH,uPACT,IAAK,eACH,OAAOF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCAAH,4FACT,IAAK,gBACH,OAAOF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iCAAH,wIACT,IAAK,WACH,OAAOF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uCAAH,6MACT,QACE,MAAO,mGAQX,OACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,uCAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQG,QAASC,KAAKC,MAAMoB,UAA5B,6BAIN3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,SAAII,KAAKsB,qBAGb5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZG,KAAKC,MAAMc,YAAYf,KAAKC,MAAMiB,kBA/CvBb,6BCqJbkB,cA9Ib,SAAAA,EAAYtB,GAAO,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAzB,KAAAuB,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA7B,KAAMC,KACD6B,MAAQ,CACXC,KAAM,OACNC,aAAc,OACdtB,WAAY,UACZE,YAAa,QACbqB,cAAe,GACfC,cAAe,IAEjBV,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKc,cAAgBd,EAAKc,cAAcF,KAAnBX,OAAAY,EAAA,EAAAZ,CAAAD,IACrBA,EAAKe,eAAiBf,EAAKe,eAAeH,KAApBX,OAAAY,EAAA,EAAAZ,CAAAD,IACtBA,EAAKV,aAAeU,EAAKV,aAAasB,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKgB,eAAiBhB,EAAKgB,eAAeJ,KAApBX,OAAAY,EAAA,EAAAZ,CAAAD,IACtBA,EAAKiB,aAAejB,EAAKiB,aAAaL,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKU,cAAgBV,EAAKU,cAAcE,KAAnBX,OAAAY,EAAA,EAAAZ,CAAAD,IAhBJA,4EAmBNkB,GACX1C,KAAK2C,SAAS,CAACX,aAAcU,EAAME,OAAO9C,8CAG9B4C,GACZ1C,KAAK2C,SAAS,CAACjC,WAAYgC,EAAME,OAAO9C,+CAG3B4C,GACb1C,KAAK2C,SAAS,CAAC/B,YAAa8B,EAAME,OAAO9C,+CAG5B4C,GACb1C,KAAK2C,SAAS,CAACZ,KAAMW,EAAME,OAAO9C,+CAGrB,IAAA+C,EAAA7C,KAEb,GADAA,KAAK2C,SAAS,CAACV,cAAe,KACC,IAA3BjC,KAAK8B,MAAME,aAAoB,CACjC,IAIIc,EAJW,0BACE,gBAAkB9C,KAAK8B,MAAME,eAC7B,eAAiBhC,KAAK8B,MAAMpB,aAC5B,gBAAkBV,KAAK8B,MAAMlB,aAE9CmC,IAAMC,IAAIF,GACPG,KAAK,SAACC,GACLL,EAAKF,SAAS,CAACV,cAAeiB,EAASC,KAAKC,aAE7CC,MAAM,SAAUC,GACfC,QAAQC,IAAIF,KAEhBtD,KAAK2C,SAAS,CAACX,aAAc,8CAIjB,IAAAyB,EAAAzD,KAEd+C,IAAMC,IADI,2BAEPC,KAAK,SAACC,GACLO,EAAKd,SAAS,CAACT,cAAe,CAACgB,EAASC,UAEzCE,MAAM,SAAUC,GACfC,QAAQC,IAAIF,uCAIRI,GAQR,OAPgBA,EAAKC,MAAM,KAAKC,IAAI,SAAAC,GAClC,OAAIA,EAASC,SAAS,YAAcD,EAASC,SAAS,YAC7CpE,EAAAC,EAAAC,cAAA,KAAGmE,KAAMF,GAAWA,GAEpBA,IAGMG,OAAO,SAACC,EAAOC,GAAR,OAAiBD,EAAME,OAAOD,EAAM,MAAM,CAAC,0CAGxDlD,GAAQ,IAAAoD,EAAApE,KACnB,OAAQgB,EAAO4C,IAAI,SAAA1C,GACjB,OACExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQwE,IAAKnD,EAAMoD,IAChC5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,gBAAQsB,EAAMC,KAAKC,YAAnB,QAAqCF,EAAMqD,aAE7C7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAauE,EAAKI,UAAUtD,EAAMwC,QAEjDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DAUvB,MAAwB,WAApBG,KAAK8B,MAAMC,KACLrC,EAAAC,EAAAC,cAAC6E,EAAD,CACEhE,SAAUT,KAAKmC,aACfxB,iBAAkBX,KAAKsC,cACvBzB,kBAAmBb,KAAKuC,eACxBzB,aAAcd,KAAKc,aACnBJ,WAAYV,KAAK8B,MAAMpB,WACvBE,YAAaZ,KAAK8B,MAAMlB,YACxBd,MAAOE,KAAK8B,MAAME,aAClBhB,OAAQhB,KAAK8B,MAAMG,cACnBlB,YAAaf,KAAKyC,eAEC,cAApBzC,KAAK8B,MAAMC,KACbrC,EAAAC,EAAAC,cAAC8E,EAAD,CACGxD,MAAOlB,KAAK8B,MAAMI,cAClBb,SAAUrB,KAAKkC,cACfnB,YAAaf,KAAKyC,eAGrB/C,EAAAC,EAAAC,cAAC+E,EAAD,uCAKT,OACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOyE,GAAG,UACvB5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,kBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyE,GAAwB,SAApBtE,KAAK8B,MAAMC,KAAkB,OAAS,QAC7DrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACgF,EAAD,CAAQ1E,QAASF,KAAKwC,eAAgBpC,QAAS,CAAC,OAAQ,SAAU,YAAa,WAEjFV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZG,KAAK6E,wBAvIAxE,aCIEyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC","file":"static/js/main.e4984780.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  generateNavigationButtons(buttonList) {\n    let navigationButtons = []\n    for (let i = 0; i < buttonList.length; i++) {\n      navigationButtons.push(<button className=\"navButton bold\" value={buttonList[i]} onClick={this.props.pageNav}>{buttonList[i]}</button>);\n    }\n    return navigationButtons;\n  }\n\n  render() {\n    return (\n      <div className=\"navBar\">\n            {this.generateNavigationButtons(this.props.buttons)}\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n      return(\n        <div className=\"main\">\n          <div className=\"row\">\n            <div className=\"col-1\"></div>\n            <div className=\"col-4 no-padding\">\n              <p className=\"textBox large extra-extra-light-gray\">Search Twitter for Tweets from your favorite users...</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <div className=\"col-4 no padding\">\n              <p className=\"textBox large extra-light-gray bold right\">or view some of mine.</p>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Search extends Component {\n    render() {\n      return (\n        <div className=\"main\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"subHeader\">\n                <h2 className=\"dark-gray\">Search Tweets</h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"input\">\n                <input type=\"text\" value={this.props.value} onChange={this.props.onChange}/>\n                <select value={this.props.searchType} onChange={this.props.selectSearchType}>\n                  <option value=\"standard\">Standard</option>\n                  <option value=\"user\">Username</option>\n                </select>\n                <select value={this.props.contentType} onChange={this.props.selectContentType}>\n                  <option value=\"mixed\">Standard</option>\n                  <option value=\"popular\">Popular</option>\n                  <option value=\"recent\">Recent</option>\n                </select>\n                <button onClick={this.props.searchTweets}>Find Tweets</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"tweets\">\n                {this.props.formatTweet(this.props.tweets)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default Search;\n","import React, { Component } from 'react';\n\nclass AwesomeTweets extends Component {\n  showDescription() {\n    if (this.props.tweet[0]) {\n      switch (this.props.tweet[0].user.screen_name) {\n        case \"jabrils_\":\n          return <p><strong>Jabrils:</strong> He has some really cool videos up on his Youtube channel, I found him because I have a Tello drone and was researching projects for it. One of his projects was to program it to track faces using machine learning, bookmarked for my to-do list!</p>;\n        case \"Raspberry_Pi\":\n          return <p><strong>Raspberry Pi:</strong> I started playing with Pis a couple years ago. The first thing I did was 'upgrade' a toy catapult I had with pan/tilt servos and a couple solenoids to fire it, all controlled through a Pi using a touchscreen interface I programmed using Kivy.</p>;\n        case \"MarkKnopfler\":\n          return <p><strong>Mark Knopfler:</strong> A very talented guitarist who I grew up listening to, he just released a new album too!</p>;\n        case \"mightycarmods\":\n          return <p><strong>Might Car Mods:</strong> These guys can be goofy but they gave me the confidence to start working on my car. I'm a big fan of their early videos on Youtube.</p>;\n        case \"aantonop\":\n          return <p><strong>Andreas Antonopoulos:</strong> You've probably heard of Bitcoin but maybe you haven't heard of Andreas. If you are interested to learn more about cryptocurrency, this guy is my go-to source of well explained and unbiased knowledge.</p>;\n        default:\n          return \"I don't know anything about this account, how did it get here?\";\n      }\n    } else {\n      return \"Press the button to display a random tweet from one of my favorite Twitter accounts.\";\n    }\n  }\n\n    render() {\n      return (\n        <div className=\"main\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"subHeader\">\n                <h2 className=\"dark-gray\">Tweets From My Favorite Accounts</h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"input\">\n                <button onClick={this.props.getTweet}>Listen to the chirping</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <div className=\"textBox medium black round-border\">\n                <p>{this.showDescription()}</p>\n              </div>\n            </div>\n            <div className=\"col-5\">\n              <div className=\"tweets\">\n                {this.props.formatTweet(this.props.tweet)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default AwesomeTweets;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './navbar.js';\nimport Home from './home.js';\nimport Search from './search.js';\nimport AwesomeTweets from './awesometweets.js';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: \"Home\",\n      searchString: 'nasa',\n      searchType: 'content',\n      contentType: 'mixed',\n      searchResults: [],\n      awesomeTweets: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.setSearchType = this.setSearchType.bind(this);\n    this.setContentType = this.setContentType.bind(this);\n    this.searchTweets = this.searchTweets.bind(this);\n    this.pageNavigation = this.pageNavigation.bind(this);\n    this.formatTweets = this.formatTweets.bind(this);\n    this.awesomeTweets = this.awesomeTweets.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({searchString: event.target.value});\n  }\n\n  setSearchType(event) {\n    this.setState({searchType: event.target.value});\n  }\n\n  setContentType(event) {\n    this.setState({contentType: event.target.value});\n  }\n\n  pageNavigation(event) {\n    this.setState({view: event.target.value})\n  }\n\n  searchTweets() {\n    this.setState({searchResults: []});\n    if (this.state.searchString != '') {\n      let resource = 'api/v1/methods/search?';\n      let parameter1 = 'searchString=' + this.state.searchString;\n      let parameter2 = '&searchType=' + this.state.searchType;\n      let parameter3 = '&contentType=' + this.state.contentType;\n      let url = resource + parameter1 + parameter2 + parameter3;\n      axios.get(url)\n        .then((response) => {\n          this.setState({searchResults: response.data.statuses});\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n      this.setState({searchString: ''});\n    }\n  }\n\n  awesomeTweets() {\n    let url = 'api/v1/methods/showcase';\n    axios.get(url)\n      .then((response) => {\n        this.setState({awesomeTweets: [response.data]})\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  applyLink(text) {\n    let fragments = text.split(' ').map(fragment => {\n      if (fragment.includes(\"http://\") || fragment.includes(\"https://\")) {\n        return <a href={fragment}>{fragment}</a>;\n      } else {\n        return fragment;\n      }\n    });\n    return fragments.reduce((words, word) => words.concat(word, ' '), [\"\"]);\n  }\n  \n  formatTweets(tweets) {\n    return (tweets.map(tweet => {\n      return (\n        <div className=\"tweet\" key={tweet.id}>\n          <div className=\"tweetBorder\">\n          \n            <div className=\"tweetHeader\">\n              <h3>By {tweet.user.screen_name}, on {tweet.created_at}</h3>\n            </div>\n            <div className=\"tweetBody\">\n              <p className=\"tweetText\">{this.applyLink(tweet.text)}</p>\n            </div>\n            <div className=\"tweetFooter\">\n              \n            </div>\n          </div>\n        </div>\n      )\n    }))\n  }\n\n  currentView() {\n    if (this.state.view === \"Search\") {\n      return (<Search \n                onChange={this.handleChange}\n                selectSearchType={this.setSearchType}\n                selectContentType={this.setContentType}\n                searchTweets={this.searchTweets}\n                searchType={this.state.searchType}\n                contentType={this.state.contentType}\n                value={this.state.searchString} \n                tweets={this.state.searchResults}\n                formatTweet={this.formatTweets}\n              />)\n    } else if (this.state.view === \"Favorites\") {\n      return <AwesomeTweets \n                tweet={this.state.awesomeTweets}\n                getTweet={this.awesomeTweets}\n                formatTweet={this.formatTweets}\n              />\n    } else {\n      return <Home />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\" id=\"splash\">\n        <div className=\"row\">\n          <div className=\"col-8 no-padding\">\n            <h1 className=\"bold white\">Tweet Finder</h1>\n          </div>\n        </div>\n        <div className=\"row\" id={this.state.view === \"Home\" ? \"home\" : \"page\"}>\n          <div className=\"col-2 sticky center\">\n            <Navbar pageNav={this.pageNavigation} buttons={[\"Home\", \"Search\", \"Favorites\", \"Info\"]}/>\n          </div>\n          <div className=\"col-6 no-padding\">\n            {this.currentView()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}